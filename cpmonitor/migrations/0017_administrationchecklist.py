# Generated by Django 4.1.7 on 2023-06-02 17:22

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    dependencies = [
        ("cpmonitor", "0016_alter_capchecklist_options_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="AdministrationChecklist",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "climate_protection_management_exists",
                    models.BooleanField(
                        default=False,
                        verbose_name="Gibt es ein Klimaschutzmanagement? Ist dieses befugt, Entscheidungen zu treffen? Sind Haushaltsmittel hinterlegt?",
                    ),
                ),
                (
                    "climate_technical_committee_exists",
                    models.BooleanField(
                        default=False,
                        verbose_name="Gibt es einen Fachausschuss mit dem Fokus auf Klimaschutz? Ist dieser befugt, Haushaltsentscheidungen zu treffen?",
                    ),
                ),
                (
                    "climate_relevance_check_exists",
                    models.BooleanField(
                        default=False,
                        verbose_name="Klimarelevanzprüfung: werden alle Beschlüsse von Verwaltung und Politik auf die Auswirkungen auf das Klima geprüft?",
                    ),
                ),
                (
                    "interdisciplinary_climate_protection_exists",
                    models.BooleanField(
                        default=False,
                        verbose_name="Ist Klimaschutz als Querschnittsaufgabe über alle Fachbereiche etabliert?",
                    ),
                ),
                (
                    "climate_protection_monitoring_exists",
                    models.BooleanField(
                        default=False,
                        verbose_name="Gibt es ein Monitoring von Kimaschutzmaßnahmen?",
                    ),
                ),
                (
                    "intersectoral_concepts_exists",
                    models.BooleanField(
                        default=False,
                        verbose_name="Gibt es (sektorenübergreifende) Konzepte (siehe Planung und Konzepte bzw. Sektorenübergreifende Konzepte)?",
                    ),
                ),
                (
                    "climate_protection_reports_are_continuously_published",
                    models.BooleanField(
                        default=False,
                        verbose_name="Werden regelmäßige Klimaschutz- und Energieberichte veröffentlicht?",
                    ),
                ),
                (
                    "guidelines_for_sustainable_procurement_exists",
                    models.BooleanField(
                        default=False,
                        verbose_name="Gibt es Richtlinien für ein nachhaltiges Beschaffungswesen?",
                    ),
                ),
                (
                    "municipal_office_for_funding_management_exists",
                    models.BooleanField(
                        default=False,
                        verbose_name="Gibt es eine eigene Kommunale Stelle für Fördermittelmanagement (unter anderem Beantragung etc. für den Klimaschutz)?",
                    ),
                ),
                (
                    "public_relation_with_local_actors_exists",
                    models.BooleanField(
                        default=False,
                        verbose_name="Vernetzung in der Öffentlichkeitsarbeit mit lokalen Akteuren (Handwerk, Sparkasse...)?",
                    ),
                ),
                (
                    "city",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="administration_checklist",
                        to="cpmonitor.city",
                    ),
                ),
            ],
            options={
                "verbose_name": "Verwaltungsstrukturen Checkliste",
            },
        ),
    ]
