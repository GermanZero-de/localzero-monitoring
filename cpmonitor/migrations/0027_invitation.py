# Generated by Django 4.1.7 on 2023-08-14 11:38

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
from django.utils.crypto import get_random_string


class AccessRight(models.TextChoices):
    "Copy from state matching this migration."
    CITY_ADMIN = "city admin", "Kommunen-Administrator"
    CITY_EDITOR = "city editor", "Kommunen-Bearbeiter"


def ensure_invitation(invitation_manager, city, access_right):
    "Check if invitation exists and create it, if not."
    if not invitation_manager.filter(city=city, access_right=access_right):
        key = get_random_string(64).lower()
        invitation_manager.create(
            key=key, inviter=None, city=city, access_right=access_right
        )


def add_invitations(apps, schema_editor):
    "Add missing invitations to all cities."
    City = apps.get_model("cpmonitor", "City")
    Invitation = apps.get_model("cpmonitor", "Invitation")
    invitation_manager = Invitation._default_manager
    db_alias = schema_editor.connection.alias
    for city in City.objects.using(db_alias).all():
        ensure_invitation(invitation_manager, city, AccessRight.CITY_ADMIN)
        ensure_invitation(invitation_manager, city, AccessRight.CITY_EDITOR)


class Migration(migrations.Migration):
    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("cpmonitor", "0026_city_city_admins_city_city_editors"),
    ]

    operations = [
        migrations.CreateModel(
            name="Invitation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "accepted",
                    models.BooleanField(default=False, verbose_name="accepted"),
                ),
                (
                    "key",
                    models.CharField(max_length=64, unique=True, verbose_name="key"),
                ),
                ("sent", models.DateTimeField(null=True, verbose_name="sent")),
                (
                    "access_right",
                    models.CharField(
                        choices=[
                            ("city admin", "Kommunen-Administrator"),
                            ("city editor", "Kommunen-Bearbeiter"),
                        ],
                        default="city editor",
                        max_length=20,
                        verbose_name="Zugriffsrecht",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        verbose_name="Erstellungszeitpunkt",
                    ),
                ),
                (
                    "city",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="invitations",
                        to="cpmonitor.city",
                        verbose_name="Kommune",
                    ),
                ),
                (
                    "inviter",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Einladungslink",
                "verbose_name_plural": "Einladungslinks",
            },
        ),
        migrations.RunPython(add_invitations, migrations.RunPython.noop),
    ]
